bazel_dep(name = "aspect_bazel_lib", version = "2.9.4")
bazel_dep(name = "container_structure_test", version = "1.19.1")
bazel_dep(name = "gazelle", version = "0.40.0")
bazel_dep(name = "platforms", version = "0.0.10")
bazel_dep(name = "rules_oci", version = "2.0.1")
bazel_dep(name = "rules_pkg", version = "1.0.1")
bazel_dep(name = "rules_go", version = "0.50.1")

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")
go_sdk.download(version = "1.23.4")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_work = "//:go.work")

# All *direct* Go dependencies of the module have to be listed explicitly.
use_repo(go_deps, "com_github_alecthomas_kong", "com_github_aws_aws_lambda_go", "com_github_aws_aws_sdk_go_v2", "com_github_aws_aws_sdk_go_v2_config", "com_github_aws_aws_sdk_go_v2_service_s3", "com_github_awslabs_aws_lambda_go_api_proxy", "com_github_getkin_kin_openapi", "com_github_google_uuid", "com_github_labstack_echo_v4", "com_github_lestrrat_go_httprc_v3", "com_github_lestrrat_go_jwx_v3", "com_github_oapi_codegen_echo_middleware", "com_github_oapi_codegen_oapi_codegen_v2", "com_github_oapi_codegen_runtime", "com_github_rs_zerolog", "com_github_wolfeidau_echo_middleware", "com_github_wolfeidau_lambda_go_extras", "com_github_wolfeidau_lambda_go_extras_middleware_raw", "com_github_wolfeidau_lambda_go_extras_middleware_zerolog", "com_github_wolfeidau_object_cache_libs_middleware", "com_github_wolfeidau_object_cache_libs_trace", "io_opentelemetry_go_otel", "io_opentelemetry_go_otel_exporters_otlp_otlptrace", "io_opentelemetry_go_otel_exporters_otlp_otlptrace_otlptracegrpc", "io_opentelemetry_go_otel_exporters_stdout_stdouttrace", "io_opentelemetry_go_otel_sdk", "io_opentelemetry_go_otel_trace")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "distroless_base",
    digest = "sha256:ccaef5ee2f1850270d453fdf700a5392534f8d1a8ca2acda391fbb6a06b81c86",
    image = "gcr.io/distroless/base",
    platforms = [
        "linux/amd64",
        "linux/arm64",
    ],
)
use_repo(oci, "distroless_base", "distroless_base_linux_amd64", "distroless_base_linux_arm64")
